// <auto-generated />
using System;
using Hadia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hadia.Migrations
{
    [DbContext(typeof(HadiaContext))]
    [Migration("20181130105741_CreateMemberMasterAndOtherMasters")]
    partial class CreateMemberMasterAndOtherMasters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_DistrictMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("DistrictName");

                    b.Property<int>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("StateId");

                    b.ToTable("Mem_DistrictMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationalQualificationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("DegreeName");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_EducationalQualifications");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdNo")
                        .IsRequired();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("DistrictId");

                    b.Property<string>("Email");

                    b.Property<int>("GroupId");

                    b.Property<bool>("IsBatchAdmin");

                    b.Property<bool>("IsVarified");

                    b.Property<int>("MyProperty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("PresentAddress")
                        .IsRequired();

                    b.Property<DateTime?>("SpouseAge");

                    b.Property<int>("SpouseEducationId");

                    b.Property<string>("SpouseName");

                    b.Property<byte>("Type");

                    b.Property<int>("UgCollageId");

                    b.Property<int>("VarifiedBy");

                    b.Property<DateTime?>("VarifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Mem_Masters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_SpouseEducationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("QualificationName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_SpouseEducationMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("StateName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_StateMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UniversityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<int>("CountryId");

                    b.Property<int?>("Mem_MasterId");

                    b.Property<string>("UniversityName");

                    b.HasKey("Id");

                    b.HasIndex("Mem_MasterId");

                    b.ToTable("Mem_UniversityMaster");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_DistrictMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("DistrictMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Mem_StateMaster", "State")
                        .WithMany("Districts")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationalQualificationMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("EducationalQualificationMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_SpouseEducationMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("SpouseEducationMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_StateMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("StateMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UniversityMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master")
                        .WithMany("UniversityMasters")
                        .HasForeignKey("Mem_MasterId");
                });
#pragma warning restore 612, 618
        }
    }
}
