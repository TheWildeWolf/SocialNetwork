// <auto-generated />
using System;
using Hadia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hadia.Migrations
{
    [DbContext(typeof(HadiaContext))]
    [Migration("20181201111504_CreateCommityMaster")]
    partial class CreateCommityMaster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hadia.Models.DomainModels.Com_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<DateTime>("FormedOn");

                    b.Property<int>("JointSecretery1Id");

                    b.Property<int>("JointSecretery2Id");

                    b.Property<DateTime?>("MDate");

                    b.Property<int?>("MLogin");

                    b.Property<int>("PresidentId");

                    b.Property<int>("SecreteryId");

                    b.Property<int>("TreasurerId");

                    b.Property<int>("Vice1Id");

                    b.Property<int>("Vice2Id");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("JointSecretery1Id");

                    b.HasIndex("JointSecretery2Id");

                    b.HasIndex("MLogin");

                    b.HasIndex("PresidentId");

                    b.HasIndex("SecreteryId");

                    b.HasIndex("TreasurerId");

                    b.HasIndex("Vice1Id");

                    b.HasIndex("Vice2Id");

                    b.ToTable("Com_Masters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.HadiyaYearMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateUpTo");

                    b.Property<DateTime?>("MDate");

                    b.Property<int?>("MLogin");

                    b.Property<string>("YearName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("MLogin");

                    b.ToTable("HadiyaYearMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.HAF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<int?>("HadiyaYearId");

                    b.Property<DateTime?>("MDate");

                    b.Property<int?>("MLogin");

                    b.Property<int>("MemberId");

                    b.Property<bool>("Paid");

                    b.Property<int>("YearId");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("HadiyaYearId");

                    b.HasIndex("MLogin");

                    b.HasIndex("MemberId");

                    b.ToTable("HAFs");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_AdminPrivilage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminAccess");

                    b.Property<bool>("AluminiDataAccess");

                    b.Property<bool>("BlockAccess");

                    b.Property<bool>("HafAccess");

                    b.Property<int>("MemberId");

                    b.Property<bool>("MemberPosting");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("Mem_AdminPrivilages");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_CountryCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<string>("TimeZone");

                    b.HasKey("Id");

                    b.ToTable("Mem_CountryCodes");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_DistrictMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("DistrictName");

                    b.Property<int>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("StateId");

                    b.ToTable("Mem_DistrictMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationalQualificationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("DegreeName");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_EducationalQualifications");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("EducationQualificationId");

                    b.Property<int>("MemberId");

                    b.Property<DateTime>("PassoutYear")
                        .HasColumnType("date");

                    b.Property<string>("Specialization")
                        .HasMaxLength(125);

                    b.Property<int>("UniversityId");

                    b.HasKey("Id");

                    b.HasIndex("EducationQualificationId");

                    b.HasIndex("MemberId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Mem_EducationDetails");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_InterestedArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("InterestedAreaId");

                    b.Property<int>("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_InterestedAreas");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Kid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Age");

                    b.Property<DateTime>("CDate");

                    b.Property<byte>("Gender");

                    b.Property<string>("KidName")
                        .HasMaxLength(120);

                    b.Property<int>("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_Kids");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdNo")
                        .IsRequired();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int?>("DistrictId");

                    b.Property<string>("Email");

                    b.Property<int?>("GroupId");

                    b.Property<bool>("IsGroupAdmin");

                    b.Property<bool>("IsVarified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("PresentAddress")
                        .IsRequired();

                    b.Property<DateTime?>("SpouseAge");

                    b.Property<int?>("SpouseEducationId");

                    b.Property<string>("SpouseName");

                    b.Property<byte>("Type");

                    b.Property<int?>("UgCollageId");

                    b.Property<int?>("VarifiedBy");

                    b.Property<DateTime?>("VarifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SpouseEducationId");

                    b.HasIndex("UgCollageId");

                    b.HasIndex("VarifiedBy");

                    b.ToTable("Mem_Masters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_MemberContanct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("ConuntryCodeId");

                    b.Property<bool>("IsVerified");

                    b.Property<int>("MemberId");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ConuntryCodeId");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_MemberContancts");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<DateTime>("MDate");

                    b.Property<int>("MLogin");

                    b.Property<int>("MemberId");

                    b.Property<byte>("Status");

                    b.Property<int>("YearId");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("MLogin");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_Memberships");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_MyNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<DateTime>("DDate");

                    b.Property<int>("MemberId");

                    b.Property<int>("NetworkMemberId");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("NetworkMemberId");

                    b.ToTable("Mem_MyNetworks");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<string>("Image");

                    b.Property<bool>("IsActive");

                    b.Property<int>("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_Photos");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_SpouseEducationMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("QualificationName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_SpouseEducationMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("StateName")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_StateMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UgColleges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("UgCollegeName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Mem_UgColleges");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UniversityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<int>("CountryId");

                    b.Property<string>("UniversityName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("CountryId");

                    b.ToTable("Mem_UniversityMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_WorkDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50);

                    b.Property<int>("CountryId");

                    b.Property<DateTime>("DateForm");

                    b.Property<DateTime>("DateUpto");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100);

                    b.Property<string>("Location")
                        .HasMaxLength(50);

                    b.Property<int>("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("MemberId");

                    b.ToTable("Mem_WorkDetails");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_ChapterLeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<DateTime>("DateFrom");

                    b.Property<int>("GroupId");

                    b.Property<int>("MemberId");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("GroupId");

                    b.HasIndex("MemberId");

                    b.ToTable("Post_ChapterLeaders");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<int>("MemberId");

                    b.Property<int>("PostId");

                    b.Property<int?>("RemovedId");

                    b.Property<byte>("Status");

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("RemovedId");

                    b.ToTable("Post_Comments");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_CommentsLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CommentId");

                    b.Property<bool>("Like");

                    b.Property<int>("MemberId");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("MemberId");

                    b.ToTable("Post_CommentsLikes");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Edit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostId");

                    b.Property<string>("Topic");

                    b.Property<string>("Voice");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Post_Edits");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_GroupMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FormedOn");

                    b.Property<string>("GroupImage");

                    b.Property<string>("GroupName")
                        .HasMaxLength(100);

                    b.Property<byte>("OpenOrClosed");

                    b.Property<string>("PassoutYear")
                        .HasMaxLength(125);

                    b.Property<byte>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Post_GroupMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy");

                    b.Property<DateTime>("CDate");

                    b.Property<int>("GroupId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsGroupAdmin");

                    b.Property<DateTime>("MDate");

                    b.Property<int>("MemberId");

                    b.Property<int>("ModifiedBy");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Post_GroupMembers");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<DateTime?>("DDate");

                    b.Property<int?>("DLogin");

                    b.Property<string>("Image");

                    b.Property<int>("PostId");

                    b.Property<bool>("isDeleted");

                    b.HasKey("Id");

                    b.HasIndex("DLogin");

                    b.HasIndex("PostId");

                    b.ToTable("Post_Images");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_InterestedArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<int>("GroupId");

                    b.Property<int>("InterestedAreaId");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("GroupId");

                    b.HasIndex("InterestedAreaId");

                    b.ToTable("Post_InterestedAreas");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_InterestedAreaMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<string>("InterestName");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.ToTable("Post_InterestedAreaMasters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<bool>("Like");

                    b.Property<int>("MemberId");

                    b.Property<int>("PostId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PostId");

                    b.ToTable("Post_Likes");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<byte>("Category");

                    b.Property<DateTime?>("DDate");

                    b.Property<int?>("DLogin");

                    b.Property<int?>("DeletedById");

                    b.Property<byte>("DonationType");

                    b.Property<int>("GroupId");

                    b.Property<int>("OpnedId");

                    b.Property<byte>("Status");

                    b.Property<string>("Topic");

                    b.Property<string>("Voice");

                    b.HasKey("Id");

                    b.HasIndex("DeletedById");

                    b.HasIndex("GroupId");

                    b.HasIndex("OpnedId");

                    b.ToTable("Post_Masters");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Narration");

                    b.Property<int>("PostId");

                    b.Property<int>("ReasonId");

                    b.Property<int?>("ReportedById");

                    b.Property<int>("ReportedId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("ReportedById");

                    b.ToTable("Post_Reports");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_ReportReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("CLogin");

                    b.Property<DateTime?>("MDate");

                    b.Property<int?>("MLogin");

                    b.Property<string>("Reason");

                    b.HasKey("Id");

                    b.HasIndex("CLogin");

                    b.HasIndex("MLogin");

                    b.ToTable("Post_ReportReasons");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Res_Views", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate");

                    b.Property<int>("MemberId");

                    b.Property<int>("ResourceId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Res_Views");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AvailableFrom");

                    b.Property<DateTime>("AvailableUpto");

                    b.Property<DateTime>("CDate");

                    b.Property<DateTime?>("DDate");

                    b.Property<int>("DLogin");

                    b.Property<DateTime?>("MDate");

                    b.Property<int>("MemberId");

                    b.Property<string>("Narration");

                    b.Property<byte>("Status");

                    b.HasKey("Id");

                    b.HasIndex("DLogin");

                    b.HasIndex("MemberId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Com_Master", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("MemCreatedBy")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "JointSecr1")
                        .WithMany("MemJointSecr1")
                        .HasForeignKey("JointSecretery1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "JointSecr2")
                        .WithMany("MemJointSecr2")
                        .HasForeignKey("JointSecretery2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Modified")
                        .WithMany("MemModifiedBy")
                        .HasForeignKey("MLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "President")
                        .WithMany("MemPresident")
                        .HasForeignKey("PresidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Secretery")
                        .WithMany("MemSecretery")
                        .HasForeignKey("SecreteryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Treasurer")
                        .WithMany("MemTreasurer")
                        .HasForeignKey("TreasurerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Vice1")
                        .WithMany("MemVice1")
                        .HasForeignKey("Vice1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Vice2")
                        .WithMany("MemVice2")
                        .HasForeignKey("Vice2Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.HadiyaYearMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "YearAddedBy")
                        .WithMany("HadiyaYearAdded")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "YearModifiedBy")
                        .WithMany("HadiyaYearModified")
                        .HasForeignKey("MLogin");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.HAF", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("HAFCreatedBy")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.HadiyaYearMaster", "HadiyaYear")
                        .WithMany("Hafs")
                        .HasForeignKey("HadiyaYearId");

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "ModifiedBy")
                        .WithMany("HAFModifiedBy")
                        .HasForeignKey("MLogin");

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("HAFmember")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_AdminPrivilage", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithOne("Privilage")
                        .HasForeignKey("Hadia.Models.DomainModels.Mem_AdminPrivilage", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_DistrictMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("DistrictMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Mem_StateMaster", "State")
                        .WithMany("Districts")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationalQualificationMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("EducationalQualificationMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_EducationDetail", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_EducationalQualificationMaster", "Qualification")
                        .WithMany("EducationDetails")
                        .HasForeignKey("EducationQualificationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("EducationDetails")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_UniversityMaster", "University")
                        .WithMany("EducationDetails")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_InterestedArea", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("InterestedAreas")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Kid", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("Kids")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Master", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_DistrictMaster", "District")
                        .WithMany("MembersInDistrict")
                        .HasForeignKey("DistrictId");

                    b.HasOne("Hadia.Models.DomainModels.Post_GroupMaster", "MainGroup")
                        .WithMany("Members")
                        .HasForeignKey("GroupId");

                    b.HasOne("Hadia.Models.DomainModels.Mem_SpouseEducationMaster", "SpouseEducation")
                        .WithMany("MembersSpouses")
                        .HasForeignKey("SpouseEducationId");

                    b.HasOne("Hadia.Models.DomainModels.Mem_UgColleges", "UgCollege")
                        .WithMany("MembersInUg")
                        .HasForeignKey("UgCollageId");

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "VarifiedMember")
                        .WithMany("VarifiedMembers")
                        .HasForeignKey("VarifiedBy");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_MemberContanct", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_CountryCode", "CountryCode")
                        .WithMany("Contancts")
                        .HasForeignKey("ConuntryCodeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("Contacts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Membership", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("MemberShipsCreated")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "ModifiedBy")
                        .WithMany("MemberShipsModified")
                        .HasForeignKey("MLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("MemberShips")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_MyNetwork", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("Networks")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "NetworkMember")
                        .WithMany("MemberInNetworks")
                        .HasForeignKey("NetworkMemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_Photo", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("Photos")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_SpouseEducationMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("SpouseEducationMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_StateMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("StateMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UgColleges", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("UgColleges")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_UniversityMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("UniversityMasters")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Mem_CountryCode", "CountryCode")
                        .WithMany("UniversityMasters")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Mem_WorkDetail", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_CountryCode", "Country")
                        .WithMany("WorkersInCountry")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("WorkDetails")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_ChapterLeader", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("CreatedChapterLeaders")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_GroupMaster", "Group")
                        .WithMany("ChapterLeaders")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("LeaderInChapters")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Comment", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Post_Master", "Master")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "DeletedBy")
                        .WithMany("DeletedComments")
                        .HasForeignKey("RemovedId");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_CommentsLike", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Post_Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("PostCommentsLikes")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Edit", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Post_Master", "Post")
                        .WithMany("EditedPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_GroupMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("CreatedGroups")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_GroupMember", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "AddedMember")
                        .WithMany("MembersAdded")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_GroupMaster", "GroupMaster")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "ModifiedMember")
                        .WithMany("MembersModified")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Image", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "DeletedBy")
                        .WithMany("DeletedPostImages")
                        .HasForeignKey("DLogin");

                    b.HasOne("Hadia.Models.DomainModels.Post_Master", "PostMaster")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_InterestedArea", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("CreatedinterestAreas")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_GroupMaster", "GroupMaster")
                        .WithMany("InterestedAreas")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_InterestedAreaMaster", "InterestedAreaMaster")
                        .WithMany("InterestedAreas")
                        .HasForeignKey("InterestedAreaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_InterestedAreaMaster", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("InterestedAreaMasterCreated")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Like", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("LikedPosts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hadia.Models.DomainModels.Post_Master", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Master", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "DeletedBy")
                        .WithMany("DeletedPosts")
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_GroupMaster", "GroupMaster")
                        .WithMany("Posts")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "OpnedBy")
                        .WithMany("CreatedPosts")
                        .HasForeignKey("OpnedId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_Report", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Post_Master", "PostMaster")
                        .WithMany("Reports")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Post_ReportReason", "ReportReason")
                        .WithMany("Reports")
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "ReportedBy")
                        .WithMany("ReportedPosts")
                        .HasForeignKey("ReportedById");
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Post_ReportReason", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "CreatedBy")
                        .WithMany("CreatedPostReportReasons")
                        .HasForeignKey("CLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "ModifiedBy")
                        .WithMany("ModifiedPostReportReasons")
                        .HasForeignKey("MLogin")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Res_Views", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("ResourcesViews")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Resource", "Resource")
                        .WithMany("ResourceViews")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Hadia.Models.DomainModels.Resource", b =>
                {
                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "DeletedBy")
                        .WithMany("ResourcesDeleted")
                        .HasForeignKey("DLogin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Hadia.Models.DomainModels.Mem_Master", "Member")
                        .WithMany("Resources")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
