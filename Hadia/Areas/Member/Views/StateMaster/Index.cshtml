@using Hadia.Helper
@model PaginatedList<Hadia.Models.ViewModels.StateMasterViewModel>
@{
    ViewData["Title"] = "All States";
    ViewData["Description"] = "Index";
}

<div class="card">
    <div class="card-header bg-white header-elements-inline">
        <h6 class="card-title"></h6>
        <div class="header-elements">
            <a asp-action="Create" class="btn bg-blue">Create New</a>
        </div>
    </div>
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Sn
                    </th>
                    <th>
                        State Name
                    </th>
                    <th>
                        Option
                    </th>
                </tr>
            </thead>
            <tbody>
                @{int SlNo = 0;}
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @(SlNo += 1)
                        </td>
                        <td>@Html.DisplayFor(x => item.StateName)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline bg-primary border-primary text-primary-800 btn-icon"><i class="icon-compose"></i></a>

                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline bg-danger border-primary text-primary-800 btn-icon confirm"><i class="icon-trash-alt"></i></a>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <ul class="pagination pagination-separated align-self-center">
        <li class="page-item @prevDisabled"><a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" class="page-link">&larr; &nbsp; Prev</a></li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            var active = i == Model.PageIndex ? "active" : "";
            <li class="page-item @active"><a asp-action="Index" asp-route-page="@i" class="page-link">@i</a></li>

        }
        <li class="page-item @nextDisabled"><a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" class="page-link">Next &nbsp; &rarr;</a></li>
    </ul>
</div>
